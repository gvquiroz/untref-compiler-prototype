Terminals which are not used

   DEF


Grammar

    0 $accept: programa $end

    1 programa: sentencia
    2         | programa sentencia

    3 sentencia: declaracion
    4          | asignacion
    5          | bucle
    6          | condicional

    7 declaracion: VAR_NAME AS TYPE_NUMBER
    8            | VAR_NAME AS TYPE_BOOLEAN
    9            | VAR_NAME AS TYPE_STRING

   10 asignacion: VAR_NAME ASSIGN NUMBER
   11           | VAR_NAME ASSIGN booleano
   12           | VAR_NAME ASSIGN STRING
   13           | VAR_NAME ASSIGN operacion
   14           | VAR_NAME ASSIGN VAR_NAME

   15 operacion: LP VAR_NAME OP_LOG VAR_NAME RP
   16          | LP VAR_NAME OP_ARI VAR_NAME RP
   17          | LP VAR_NAME OP_LOG NUMBER RP
   18          | LP VAR_NAME OP_ARI NUMBER RP
   19          | LP NUMBER OP_LOG NUMBER RP
   20          | LP NUMBER OP_ARI NUMBER RP
   21          | LP NUMBER OP_LOG VAR_NAME RP
   22          | LP NUMBER OP_ARI VAR_NAME RP

   23 booleano: BOOLEAN
   24         | OP_LOG VAR_NAME
   25         | VAR_NAME OP_LOG NUMBER
   26         | NUMBER OP_LOG NUMBER
   27         | NUMBER OP_LOG VAR_NAME
   28         | VAR_NAME OP_LOG VAR_NAME

   29 bucle: WHILE LP booleano RP LC programa RC
   30      | WHILE LP VAR_NAME RP LC programa RC

   31 condicional: IF LP booleano RP LC programa RC
   32            | IF LP VAR_NAME RP LC programa RC


Terminals, with rules where they appear

$end (0) 0
error (256)
TYPE_NUMBER (258) 7
TYPE_BOOLEAN (259) 8
TYPE_STRING (260) 9
DEF (261)
AS (262) 7 8 9
ASSIGN (263) 10 11 12 13 14
IF (264) 31 32
WHILE (265) 29 30
OP_ARI (266) 16 18 20 22
OP_LOG (267) 15 17 19 21 24 25 26 27 28
LP (268) 15 16 17 18 19 20 21 22 29 30 31 32
RP (269) 15 16 17 18 19 20 21 22 29 30 31 32
LC (270) 29 30 31 32
RC (271) 29 30 31 32
NUMBER (272) 10 17 18 19 20 21 22 25 26 27
BOOLEAN (273) 23
STRING (274) 12
VAR_NAME (275) 7 8 9 10 11 12 13 14 15 16 17 18 21 22 24 25 27 28 30
    32


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
programa (22)
    on left: 1 2, on right: 0 2 29 30 31 32
sentencia (23)
    on left: 3 4 5 6, on right: 1 2
declaracion (24)
    on left: 7 8 9, on right: 3
asignacion (25)
    on left: 10 11 12 13 14, on right: 4
operacion (26)
    on left: 15 16 17 18 19 20 21 22, on right: 13
booleano (27)
    on left: 23 24 25 26 27 28, on right: 11 29 31
bucle (28)
    on left: 29 30, on right: 5
condicional (29)
    on left: 31 32, on right: 6


state 0

    0 $accept: . programa $end

    IF        shift, and go to state 1
    WHILE     shift, and go to state 2
    VAR_NAME  shift, and go to state 3

    programa     go to state 4
    sentencia    go to state 5
    declaracion  go to state 6
    asignacion   go to state 7
    bucle        go to state 8
    condicional  go to state 9


state 1

   31 condicional: IF . LP booleano RP LC programa RC
   32            | IF . LP VAR_NAME RP LC programa RC

    LP  shift, and go to state 10


state 2

   29 bucle: WHILE . LP booleano RP LC programa RC
   30      | WHILE . LP VAR_NAME RP LC programa RC

    LP  shift, and go to state 11


state 3

    7 declaracion: VAR_NAME . AS TYPE_NUMBER
    8            | VAR_NAME . AS TYPE_BOOLEAN
    9            | VAR_NAME . AS TYPE_STRING
   10 asignacion: VAR_NAME . ASSIGN NUMBER
   11           | VAR_NAME . ASSIGN booleano
   12           | VAR_NAME . ASSIGN STRING
   13           | VAR_NAME . ASSIGN operacion
   14           | VAR_NAME . ASSIGN VAR_NAME

    AS      shift, and go to state 12
    ASSIGN  shift, and go to state 13


state 4

    0 $accept: programa . $end
    2 programa: programa . sentencia

    $end      shift, and go to state 14
    IF        shift, and go to state 1
    WHILE     shift, and go to state 2
    VAR_NAME  shift, and go to state 3

    sentencia    go to state 15
    declaracion  go to state 6
    asignacion   go to state 7
    bucle        go to state 8
    condicional  go to state 9


state 5

    1 programa: sentencia .

    $default  reduce using rule 1 (programa)


state 6

    3 sentencia: declaracion .

    $default  reduce using rule 3 (sentencia)


state 7

    4 sentencia: asignacion .

    $default  reduce using rule 4 (sentencia)


state 8

    5 sentencia: bucle .

    $default  reduce using rule 5 (sentencia)


state 9

    6 sentencia: condicional .

    $default  reduce using rule 6 (sentencia)


state 10

   31 condicional: IF LP . booleano RP LC programa RC
   32            | IF LP . VAR_NAME RP LC programa RC

    OP_LOG    shift, and go to state 16
    NUMBER    shift, and go to state 17
    BOOLEAN   shift, and go to state 18
    VAR_NAME  shift, and go to state 19

    booleano  go to state 20


state 11

   29 bucle: WHILE LP . booleano RP LC programa RC
   30      | WHILE LP . VAR_NAME RP LC programa RC

    OP_LOG    shift, and go to state 16
    NUMBER    shift, and go to state 17
    BOOLEAN   shift, and go to state 18
    VAR_NAME  shift, and go to state 21

    booleano  go to state 22


state 12

    7 declaracion: VAR_NAME AS . TYPE_NUMBER
    8            | VAR_NAME AS . TYPE_BOOLEAN
    9            | VAR_NAME AS . TYPE_STRING

    TYPE_NUMBER   shift, and go to state 23
    TYPE_BOOLEAN  shift, and go to state 24
    TYPE_STRING   shift, and go to state 25


state 13

   10 asignacion: VAR_NAME ASSIGN . NUMBER
   11           | VAR_NAME ASSIGN . booleano
   12           | VAR_NAME ASSIGN . STRING
   13           | VAR_NAME ASSIGN . operacion
   14           | VAR_NAME ASSIGN . VAR_NAME

    OP_LOG    shift, and go to state 16
    LP        shift, and go to state 26
    NUMBER    shift, and go to state 27
    BOOLEAN   shift, and go to state 18
    STRING    shift, and go to state 28
    VAR_NAME  shift, and go to state 29

    operacion  go to state 30
    booleano   go to state 31


state 14

    0 $accept: programa $end .

    $default  accept


state 15

    2 programa: programa sentencia .

    $default  reduce using rule 2 (programa)


state 16

   24 booleano: OP_LOG . VAR_NAME

    VAR_NAME  shift, and go to state 32


state 17

   26 booleano: NUMBER . OP_LOG NUMBER
   27         | NUMBER . OP_LOG VAR_NAME

    OP_LOG  shift, and go to state 33


state 18

   23 booleano: BOOLEAN .

    $default  reduce using rule 23 (booleano)


state 19

   25 booleano: VAR_NAME . OP_LOG NUMBER
   28         | VAR_NAME . OP_LOG VAR_NAME
   32 condicional: IF LP VAR_NAME . RP LC programa RC

    OP_LOG  shift, and go to state 34
    RP      shift, and go to state 35


state 20

   31 condicional: IF LP booleano . RP LC programa RC

    RP  shift, and go to state 36


state 21

   25 booleano: VAR_NAME . OP_LOG NUMBER
   28         | VAR_NAME . OP_LOG VAR_NAME
   30 bucle: WHILE LP VAR_NAME . RP LC programa RC

    OP_LOG  shift, and go to state 34
    RP      shift, and go to state 37


state 22

   29 bucle: WHILE LP booleano . RP LC programa RC

    RP  shift, and go to state 38


state 23

    7 declaracion: VAR_NAME AS TYPE_NUMBER .

    $default  reduce using rule 7 (declaracion)


state 24

    8 declaracion: VAR_NAME AS TYPE_BOOLEAN .

    $default  reduce using rule 8 (declaracion)


state 25

    9 declaracion: VAR_NAME AS TYPE_STRING .

    $default  reduce using rule 9 (declaracion)


state 26

   15 operacion: LP . VAR_NAME OP_LOG VAR_NAME RP
   16          | LP . VAR_NAME OP_ARI VAR_NAME RP
   17          | LP . VAR_NAME OP_LOG NUMBER RP
   18          | LP . VAR_NAME OP_ARI NUMBER RP
   19          | LP . NUMBER OP_LOG NUMBER RP
   20          | LP . NUMBER OP_ARI NUMBER RP
   21          | LP . NUMBER OP_LOG VAR_NAME RP
   22          | LP . NUMBER OP_ARI VAR_NAME RP

    NUMBER    shift, and go to state 39
    VAR_NAME  shift, and go to state 40


state 27

   10 asignacion: VAR_NAME ASSIGN NUMBER .
   26 booleano: NUMBER . OP_LOG NUMBER
   27         | NUMBER . OP_LOG VAR_NAME

    OP_LOG  shift, and go to state 33

    $default  reduce using rule 10 (asignacion)


state 28

   12 asignacion: VAR_NAME ASSIGN STRING .

    $default  reduce using rule 12 (asignacion)


state 29

   14 asignacion: VAR_NAME ASSIGN VAR_NAME .
   25 booleano: VAR_NAME . OP_LOG NUMBER
   28         | VAR_NAME . OP_LOG VAR_NAME

    OP_LOG  shift, and go to state 34

    $default  reduce using rule 14 (asignacion)


state 30

   13 asignacion: VAR_NAME ASSIGN operacion .

    $default  reduce using rule 13 (asignacion)


state 31

   11 asignacion: VAR_NAME ASSIGN booleano .

    $default  reduce using rule 11 (asignacion)


state 32

   24 booleano: OP_LOG VAR_NAME .

    $default  reduce using rule 24 (booleano)


state 33

   26 booleano: NUMBER OP_LOG . NUMBER
   27         | NUMBER OP_LOG . VAR_NAME

    NUMBER    shift, and go to state 41
    VAR_NAME  shift, and go to state 42


state 34

   25 booleano: VAR_NAME OP_LOG . NUMBER
   28         | VAR_NAME OP_LOG . VAR_NAME

    NUMBER    shift, and go to state 43
    VAR_NAME  shift, and go to state 44


state 35

   32 condicional: IF LP VAR_NAME RP . LC programa RC

    LC  shift, and go to state 45


state 36

   31 condicional: IF LP booleano RP . LC programa RC

    LC  shift, and go to state 46


state 37

   30 bucle: WHILE LP VAR_NAME RP . LC programa RC

    LC  shift, and go to state 47


state 38

   29 bucle: WHILE LP booleano RP . LC programa RC

    LC  shift, and go to state 48


state 39

   19 operacion: LP NUMBER . OP_LOG NUMBER RP
   20          | LP NUMBER . OP_ARI NUMBER RP
   21          | LP NUMBER . OP_LOG VAR_NAME RP
   22          | LP NUMBER . OP_ARI VAR_NAME RP

    OP_ARI  shift, and go to state 49
    OP_LOG  shift, and go to state 50


state 40

   15 operacion: LP VAR_NAME . OP_LOG VAR_NAME RP
   16          | LP VAR_NAME . OP_ARI VAR_NAME RP
   17          | LP VAR_NAME . OP_LOG NUMBER RP
   18          | LP VAR_NAME . OP_ARI NUMBER RP

    OP_ARI  shift, and go to state 51
    OP_LOG  shift, and go to state 52


state 41

   26 booleano: NUMBER OP_LOG NUMBER .

    $default  reduce using rule 26 (booleano)


state 42

   27 booleano: NUMBER OP_LOG VAR_NAME .

    $default  reduce using rule 27 (booleano)


state 43

   25 booleano: VAR_NAME OP_LOG NUMBER .

    $default  reduce using rule 25 (booleano)


state 44

   28 booleano: VAR_NAME OP_LOG VAR_NAME .

    $default  reduce using rule 28 (booleano)


state 45

   32 condicional: IF LP VAR_NAME RP LC . programa RC

    IF        shift, and go to state 1
    WHILE     shift, and go to state 2
    VAR_NAME  shift, and go to state 3

    programa     go to state 53
    sentencia    go to state 5
    declaracion  go to state 6
    asignacion   go to state 7
    bucle        go to state 8
    condicional  go to state 9


state 46

   31 condicional: IF LP booleano RP LC . programa RC

    IF        shift, and go to state 1
    WHILE     shift, and go to state 2
    VAR_NAME  shift, and go to state 3

    programa     go to state 54
    sentencia    go to state 5
    declaracion  go to state 6
    asignacion   go to state 7
    bucle        go to state 8
    condicional  go to state 9


state 47

   30 bucle: WHILE LP VAR_NAME RP LC . programa RC

    IF        shift, and go to state 1
    WHILE     shift, and go to state 2
    VAR_NAME  shift, and go to state 3

    programa     go to state 55
    sentencia    go to state 5
    declaracion  go to state 6
    asignacion   go to state 7
    bucle        go to state 8
    condicional  go to state 9


state 48

   29 bucle: WHILE LP booleano RP LC . programa RC

    IF        shift, and go to state 1
    WHILE     shift, and go to state 2
    VAR_NAME  shift, and go to state 3

    programa     go to state 56
    sentencia    go to state 5
    declaracion  go to state 6
    asignacion   go to state 7
    bucle        go to state 8
    condicional  go to state 9


state 49

   20 operacion: LP NUMBER OP_ARI . NUMBER RP
   22          | LP NUMBER OP_ARI . VAR_NAME RP

    NUMBER    shift, and go to state 57
    VAR_NAME  shift, and go to state 58


state 50

   19 operacion: LP NUMBER OP_LOG . NUMBER RP
   21          | LP NUMBER OP_LOG . VAR_NAME RP

    NUMBER    shift, and go to state 59
    VAR_NAME  shift, and go to state 60


state 51

   16 operacion: LP VAR_NAME OP_ARI . VAR_NAME RP
   18          | LP VAR_NAME OP_ARI . NUMBER RP

    NUMBER    shift, and go to state 61
    VAR_NAME  shift, and go to state 62


state 52

   15 operacion: LP VAR_NAME OP_LOG . VAR_NAME RP
   17          | LP VAR_NAME OP_LOG . NUMBER RP

    NUMBER    shift, and go to state 63
    VAR_NAME  shift, and go to state 64


state 53

    2 programa: programa . sentencia
   32 condicional: IF LP VAR_NAME RP LC programa . RC

    IF        shift, and go to state 1
    WHILE     shift, and go to state 2
    RC        shift, and go to state 65
    VAR_NAME  shift, and go to state 3

    sentencia    go to state 15
    declaracion  go to state 6
    asignacion   go to state 7
    bucle        go to state 8
    condicional  go to state 9


state 54

    2 programa: programa . sentencia
   31 condicional: IF LP booleano RP LC programa . RC

    IF        shift, and go to state 1
    WHILE     shift, and go to state 2
    RC        shift, and go to state 66
    VAR_NAME  shift, and go to state 3

    sentencia    go to state 15
    declaracion  go to state 6
    asignacion   go to state 7
    bucle        go to state 8
    condicional  go to state 9


state 55

    2 programa: programa . sentencia
   30 bucle: WHILE LP VAR_NAME RP LC programa . RC

    IF        shift, and go to state 1
    WHILE     shift, and go to state 2
    RC        shift, and go to state 67
    VAR_NAME  shift, and go to state 3

    sentencia    go to state 15
    declaracion  go to state 6
    asignacion   go to state 7
    bucle        go to state 8
    condicional  go to state 9


state 56

    2 programa: programa . sentencia
   29 bucle: WHILE LP booleano RP LC programa . RC

    IF        shift, and go to state 1
    WHILE     shift, and go to state 2
    RC        shift, and go to state 68
    VAR_NAME  shift, and go to state 3

    sentencia    go to state 15
    declaracion  go to state 6
    asignacion   go to state 7
    bucle        go to state 8
    condicional  go to state 9


state 57

   20 operacion: LP NUMBER OP_ARI NUMBER . RP

    RP  shift, and go to state 69


state 58

   22 operacion: LP NUMBER OP_ARI VAR_NAME . RP

    RP  shift, and go to state 70


state 59

   19 operacion: LP NUMBER OP_LOG NUMBER . RP

    RP  shift, and go to state 71


state 60

   21 operacion: LP NUMBER OP_LOG VAR_NAME . RP

    RP  shift, and go to state 72


state 61

   18 operacion: LP VAR_NAME OP_ARI NUMBER . RP

    RP  shift, and go to state 73


state 62

   16 operacion: LP VAR_NAME OP_ARI VAR_NAME . RP

    RP  shift, and go to state 74


state 63

   17 operacion: LP VAR_NAME OP_LOG NUMBER . RP

    RP  shift, and go to state 75


state 64

   15 operacion: LP VAR_NAME OP_LOG VAR_NAME . RP

    RP  shift, and go to state 76


state 65

   32 condicional: IF LP VAR_NAME RP LC programa RC .

    $default  reduce using rule 32 (condicional)


state 66

   31 condicional: IF LP booleano RP LC programa RC .

    $default  reduce using rule 31 (condicional)


state 67

   30 bucle: WHILE LP VAR_NAME RP LC programa RC .

    $default  reduce using rule 30 (bucle)


state 68

   29 bucle: WHILE LP booleano RP LC programa RC .

    $default  reduce using rule 29 (bucle)


state 69

   20 operacion: LP NUMBER OP_ARI NUMBER RP .

    $default  reduce using rule 20 (operacion)


state 70

   22 operacion: LP NUMBER OP_ARI VAR_NAME RP .

    $default  reduce using rule 22 (operacion)


state 71

   19 operacion: LP NUMBER OP_LOG NUMBER RP .

    $default  reduce using rule 19 (operacion)


state 72

   21 operacion: LP NUMBER OP_LOG VAR_NAME RP .

    $default  reduce using rule 21 (operacion)


state 73

   18 operacion: LP VAR_NAME OP_ARI NUMBER RP .

    $default  reduce using rule 18 (operacion)


state 74

   16 operacion: LP VAR_NAME OP_ARI VAR_NAME RP .

    $default  reduce using rule 16 (operacion)


state 75

   17 operacion: LP VAR_NAME OP_LOG NUMBER RP .

    $default  reduce using rule 17 (operacion)


state 76

   15 operacion: LP VAR_NAME OP_LOG VAR_NAME RP .

    $default  reduce using rule 15 (operacion)
